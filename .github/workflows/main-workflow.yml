name: Mixafy mobile apps CI

on:
  push:
    branches:
      - main

jobs:
  test:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./app

    steps:

      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze . --no-fatal-warnings --no-fatal-infos

  build_android:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./app

    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Generate the keystore file
      - name: Decode keystore file
        env:
          CERTIFICATE_BASE64: ${{ secrets.STORE_FILE_CONTENT }}
        run: echo $CERTIFICATE_BASE64 | base64 --decode > android/app/my-keystore.jks

      - name: Create temporary key.properties
        run: |
          echo "storeFile=my-keystore.jks" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

      # Generate the .env file
      - name: Generate .env file
        run: echo "spotify_client_id=${{ secrets.SPOTIFY_CLIENT_ID }}" > .env

      - name: Clean Gradle cache
        run: |
          rm -rf ~/.gradle/caches

      # Build Android release
      - run: flutter build appbundle --release

      - uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: app/build/app/outputs/bundle/release/app-release.aab
          overwrite: true

  release:
    needs: [test, build_android]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: android-release
      - uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{secrets.SERVICE_ACCOUNT_JSON}}
          packageName: com.keller.mixafy
          releaseFiles: app-release.aab
          track: production
